name: 'Release to production'
description: 'Release to production'

inputs:
  github-pat:
    description: 'Github Personal Access Token. Used to create PR using GitHub API in another repository.'
    required: true
  short-sha:
    description: 'Github short SHA'

runs:
  using: "composite"

  steps:
    - name: Install yq
      shell: bash
      env:
        YQ_VERSION: 3.4.1
      run: |
        sudo wget -O /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64
        sudo chmod +x /usr/local/bin/yq
    - name: Update image with yq and push branch
      shell: bash
      run: |
        TAG=$(basename ${GITHUB_REF})

        if [ -z "${{ inputs.short-sha }}" ]
        then
          SHA=$(echo $GITHUB_SHA | cut -c 1-7)
        else
          SHA=${{ inputs.short-sha }}
        fi

        VALUES_FILE="${{ github.event.repository.name }}/values/prod.yaml"
        VERSION="${TAG}-${SHA}"

        [ -f $VALUES_FILE ] || ( echo "$VALUES_FILE does not exist. Is the service configured to be deployed with Argo CD?"; exit 1 )

        IMAGE=$(yq r ${VALUES_FILE} "image" | sed "s/:.*$//")":${VERSION}"

        git config --global user.email ${{ github.event.head_commit.author.email }}
        git config --global user.name ${{github.event.head_commit.author.name}}
        git checkout -b deploy-prod-${{github.sha}}

        yq w --inplace ${VALUES_FILE} "image" ${IMAGE}
        yq w --inplace ${VALUES_FILE} "version" ${VERSION}

        # fully qualify the PR number (e.g. #123) as GitHub UI will incorrectly interpret it as a local PR
        # we must use toJSON function to avoid breaking echo when quotes are in commit messages
        ESCAPED_COMMIT_MESSAGE=$(echo ${{ toJSON(github.event.head_commit.message) }})
        URL="https:\/\/github.com\/voiapp\/"${{ github.event.repository.name }}"\/pull\/"
        MESSAGE=$(echo "$ESCAPED_COMMIT_MESSAGE" | sed 's/\(.*\)#/\1 '"$URL"'/')

        git commit -am "Set image for deploy using tag ${VERSION}. Commit: ${MESSAGE} by ${{github.event.head_commit.author.name}}"
        git push --set-upstream origin deploy-prod-${{github.sha}}
    - name: Create PR
      shell: bash
      env:
        MANIFEST_REPO: "voiapp/argo-cd-apps"
        MANIFEST_REPO_BRANCH: "main"
      run: |
        # fully qualify the PR number (e.g. #123) as GitHub UI will incorrectly interpret it as a local PR
        # we must use toJSON function to avoid breaking echo when quotes are in commit messages
        ESCAPED_COMMIT_MESSAGE=$(echo ${{ toJSON(github.event.head_commit.message) }})
        URL="https:\/\/github.com\/voiapp\/"${{ github.event.repository.name }}"\/pull\/"
        MESSAGE=$(echo "$ESCAPED_COMMIT_MESSAGE" | sed 's/\(.*\)#/\1 '"$URL"'/')

        gh auth login --with-token <<< ${{ inputs.github-pat }}
        gh pr create -t "Deploy ${{ github.event.repository.name }} to production by ${{github.event.head_commit.author.name}}" \
        -b "Deploy new image to production for SHA ${{github.sha}}. Commit: ${MESSAGE} by ${{github.event.head_commit.author.name}}" \
        -B ${{env.MANIFEST_REPO_BRANCH}} -H deploy-prod-${{github.sha}}
